// Code generated by templ - DO NOT EDIT.

// templ: version: v0.3.865
package pages

//lint:file-ignore SA4006 This context is only used if a nested component is present.

import "github.com/a-h/templ"
import templruntime "github.com/a-h/templ/runtime"

import "github.com/ChrisRx/chrisrx-dev/components"

var packages = []string{
	"go.chrisrx.dev/x/assert",
	"go.chrisrx.dev/x/backoff",
	"go.chrisrx.dev/x/chans",
	"go.chrisrx.dev/x/context",
	"go.chrisrx.dev/x/env",
	"go.chrisrx.dev/x/expr",
	"go.chrisrx.dev/x/future",
	"go.chrisrx.dev/x/group",
	"go.chrisrx.dev/x/safe",
	"go.chrisrx.dev/x/set",
	"go.chrisrx.dev/x/sync",
}

func Index() templ.Component {
	return templruntime.GeneratedTemplate(func(templ_7745c5c3_Input templruntime.GeneratedComponentInput) (templ_7745c5c3_Err error) {
		templ_7745c5c3_W, ctx := templ_7745c5c3_Input.Writer, templ_7745c5c3_Input.Context
		if templ_7745c5c3_CtxErr := ctx.Err(); templ_7745c5c3_CtxErr != nil {
			return templ_7745c5c3_CtxErr
		}
		templ_7745c5c3_Buffer, templ_7745c5c3_IsBuffer := templruntime.GetBuffer(templ_7745c5c3_W)
		if !templ_7745c5c3_IsBuffer {
			defer func() {
				templ_7745c5c3_BufErr := templruntime.ReleaseBuffer(templ_7745c5c3_Buffer)
				if templ_7745c5c3_Err == nil {
					templ_7745c5c3_Err = templ_7745c5c3_BufErr
				}
			}()
		}
		ctx = templ.InitializeContext(ctx)
		templ_7745c5c3_Var1 := templ.GetChildren(ctx)
		if templ_7745c5c3_Var1 == nil {
			templ_7745c5c3_Var1 = templ.NopComponent
		}
		ctx = templ.ClearChildren(ctx)
		templ_7745c5c3_Var2 := templruntime.GeneratedTemplate(func(templ_7745c5c3_Input templruntime.GeneratedComponentInput) (templ_7745c5c3_Err error) {
			templ_7745c5c3_W, ctx := templ_7745c5c3_Input.Writer, templ_7745c5c3_Input.Context
			templ_7745c5c3_Buffer, templ_7745c5c3_IsBuffer := templruntime.GetBuffer(templ_7745c5c3_W)
			if !templ_7745c5c3_IsBuffer {
				defer func() {
					templ_7745c5c3_BufErr := templruntime.ReleaseBuffer(templ_7745c5c3_Buffer)
					if templ_7745c5c3_Err == nil {
						templ_7745c5c3_Err = templ_7745c5c3_BufErr
					}
				}()
			}
			ctx = templ.InitializeContext(ctx)
			templ_7745c5c3_Var3 := templruntime.GeneratedTemplate(func(templ_7745c5c3_Input templruntime.GeneratedComponentInput) (templ_7745c5c3_Err error) {
				templ_7745c5c3_W, ctx := templ_7745c5c3_Input.Writer, templ_7745c5c3_Input.Context
				templ_7745c5c3_Buffer, templ_7745c5c3_IsBuffer := templruntime.GetBuffer(templ_7745c5c3_W)
				if !templ_7745c5c3_IsBuffer {
					defer func() {
						templ_7745c5c3_BufErr := templruntime.ReleaseBuffer(templ_7745c5c3_Buffer)
						if templ_7745c5c3_Err == nil {
							templ_7745c5c3_Err = templ_7745c5c3_BufErr
						}
					}()
				}
				ctx = templ.InitializeContext(ctx)
				templ_7745c5c3_Err = style().Render(ctx, templ_7745c5c3_Buffer)
				if templ_7745c5c3_Err != nil {
					return templ_7745c5c3_Err
				}
				return nil
			})
			templ_7745c5c3_Err = components.Head().Render(templ.WithChildren(ctx, templ_7745c5c3_Var3), templ_7745c5c3_Buffer)
			if templ_7745c5c3_Err != nil {
				return templ_7745c5c3_Err
			}
			templ_7745c5c3_Err = templruntime.WriteString(templ_7745c5c3_Buffer, 1, " ")
			if templ_7745c5c3_Err != nil {
				return templ_7745c5c3_Err
			}
			templ_7745c5c3_Var4 := templruntime.GeneratedTemplate(func(templ_7745c5c3_Input templruntime.GeneratedComponentInput) (templ_7745c5c3_Err error) {
				templ_7745c5c3_W, ctx := templ_7745c5c3_Input.Writer, templ_7745c5c3_Input.Context
				templ_7745c5c3_Buffer, templ_7745c5c3_IsBuffer := templruntime.GetBuffer(templ_7745c5c3_W)
				if !templ_7745c5c3_IsBuffer {
					defer func() {
						templ_7745c5c3_BufErr := templruntime.ReleaseBuffer(templ_7745c5c3_Buffer)
						if templ_7745c5c3_Err == nil {
							templ_7745c5c3_Err = templ_7745c5c3_BufErr
						}
					}()
				}
				ctx = templ.InitializeContext(ctx)
				templ_7745c5c3_Err = templruntime.WriteString(templ_7745c5c3_Buffer, 2, "<div class=\"sticky-container\" id=\"stickyContainer\"><div class=\"webgl-section\" id=\"webglSection\"><div class=\"canvas-container\" id=\"canvasContainer\"><canvas id=\"space\"></canvas></div></div></div>")
				if templ_7745c5c3_Err != nil {
					return templ_7745c5c3_Err
				}
				templ_7745c5c3_Err = warpspeed().Render(ctx, templ_7745c5c3_Buffer)
				if templ_7745c5c3_Err != nil {
					return templ_7745c5c3_Err
				}
				templ_7745c5c3_Err = templruntime.WriteString(templ_7745c5c3_Buffer, 3, " <div class=\"grid grid-cols-4\"><div class=\"\"><img src=\"../assets/images/skull.gif\" class=\"h-full float-right object-cover\" alt=\"\"></div><div class=\"col-span-2\"><div class=\"mx-auto flex max-w-3xl h-screen items-center -z-1\">")
				if templ_7745c5c3_Err != nil {
					return templ_7745c5c3_Err
				}
				templ_7745c5c3_Var5 := templruntime.GeneratedTemplate(func(templ_7745c5c3_Input templruntime.GeneratedComponentInput) (templ_7745c5c3_Err error) {
					templ_7745c5c3_W, ctx := templ_7745c5c3_Input.Writer, templ_7745c5c3_Input.Context
					templ_7745c5c3_Buffer, templ_7745c5c3_IsBuffer := templruntime.GetBuffer(templ_7745c5c3_W)
					if !templ_7745c5c3_IsBuffer {
						defer func() {
							templ_7745c5c3_BufErr := templruntime.ReleaseBuffer(templ_7745c5c3_Buffer)
							if templ_7745c5c3_Err == nil {
								templ_7745c5c3_Err = templ_7745c5c3_BufErr
							}
						}()
					}
					ctx = templ.InitializeContext(ctx)
					templ_7745c5c3_Var6 := templruntime.GeneratedTemplate(func(templ_7745c5c3_Input templruntime.GeneratedComponentInput) (templ_7745c5c3_Err error) {
						templ_7745c5c3_W, ctx := templ_7745c5c3_Input.Writer, templ_7745c5c3_Input.Context
						templ_7745c5c3_Buffer, templ_7745c5c3_IsBuffer := templruntime.GetBuffer(templ_7745c5c3_W)
						if !templ_7745c5c3_IsBuffer {
							defer func() {
								templ_7745c5c3_BufErr := templruntime.ReleaseBuffer(templ_7745c5c3_Buffer)
								if templ_7745c5c3_Err == nil {
									templ_7745c5c3_Err = templ_7745c5c3_BufErr
								}
							}()
						}
						ctx = templ.InitializeContext(ctx)
						templ_7745c5c3_Var7 := templruntime.GeneratedTemplate(func(templ_7745c5c3_Input templruntime.GeneratedComponentInput) (templ_7745c5c3_Err error) {
							templ_7745c5c3_W, ctx := templ_7745c5c3_Input.Writer, templ_7745c5c3_Input.Context
							templ_7745c5c3_Buffer, templ_7745c5c3_IsBuffer := templruntime.GetBuffer(templ_7745c5c3_W)
							if !templ_7745c5c3_IsBuffer {
								defer func() {
									templ_7745c5c3_BufErr := templruntime.ReleaseBuffer(templ_7745c5c3_Buffer)
									if templ_7745c5c3_Err == nil {
										templ_7745c5c3_Err = templ_7745c5c3_BufErr
									}
								}()
							}
							ctx = templ.InitializeContext(ctx)
							templ_7745c5c3_Err = templruntime.WriteString(templ_7745c5c3_Buffer, 4, "<div class=\"h-full flex items-center font-bold text-[6px] ml-[2px]\">Netscape Navigator 3.0</div>")
							if templ_7745c5c3_Err != nil {
								return templ_7745c5c3_Err
							}
							return nil
						})
						templ_7745c5c3_Err = components.Title(components.Class("text-[#f5f5f5]")).Render(templ.WithChildren(ctx, templ_7745c5c3_Var7), templ_7745c5c3_Buffer)
						if templ_7745c5c3_Err != nil {
							return templ_7745c5c3_Err
						}
						templ_7745c5c3_Err = templruntime.WriteString(templ_7745c5c3_Buffer, 5, " <img class=\"object-right object-fill m-[2px]\" src=\"../assets/images/btn-close@2x.png\">")
						if templ_7745c5c3_Err != nil {
							return templ_7745c5c3_Err
						}
						return nil
					})
					templ_7745c5c3_Err = components.Header(components.Class("bg-windows-blue h-[22px]")).Render(templ.WithChildren(ctx, templ_7745c5c3_Var6), templ_7745c5c3_Buffer)
					if templ_7745c5c3_Err != nil {
						return templ_7745c5c3_Err
					}
					templ_7745c5c3_Err = templruntime.WriteString(templ_7745c5c3_Buffer, 6, " <div class=\"flex\"><div class=\"w-full bg-silver\"><div class=\"flex flex-row w-full min-h-[24px] items-center pl-[5px] netscape-toolbar\"><div class=\"text-[9px]\">Location:</div><div class=\"bg-white w-full inset-shadow-[0_0_0_1px_#000] border-t-1 border-t-[#808080] border-l-1 border-l-[#808080] pl-[2px] m-[3px] text-[9px] text-nowrap overflow-hidden\">https://go.chrisrx.dev</div></div><div class=\" flex flex-row w-full min-h-[24px] items-center pl-[5px] netscape-toolbar\"><div id=\"whats-new\" class=\"netscape-button\">What's New</div><div x-data=\"\" @click=\"toggleWarpSpeed\" id=\"whats-cool\" class=\"netscape-button\">What's Cool</div></div></div><div class=\"min-h-[48px]\"><img class=\"object-fill aspect-square min-w-[48px] min-h-[48px]\" height=\"40\" width=\"40\" src=\"../assets/images/netscape.gif\"></div></div>")
					if templ_7745c5c3_Err != nil {
						return templ_7745c5c3_Err
					}
					templ_7745c5c3_Var8 := templruntime.GeneratedTemplate(func(templ_7745c5c3_Input templruntime.GeneratedComponentInput) (templ_7745c5c3_Err error) {
						templ_7745c5c3_W, ctx := templ_7745c5c3_Input.Writer, templ_7745c5c3_Input.Context
						templ_7745c5c3_Buffer, templ_7745c5c3_IsBuffer := templruntime.GetBuffer(templ_7745c5c3_W)
						if !templ_7745c5c3_IsBuffer {
							defer func() {
								templ_7745c5c3_BufErr := templruntime.ReleaseBuffer(templ_7745c5c3_Buffer)
								if templ_7745c5c3_Err == nil {
									templ_7745c5c3_Err = templ_7745c5c3_BufErr
								}
							}()
						}
						ctx = templ.InitializeContext(ctx)
						templ_7745c5c3_Err = templruntime.WriteString(templ_7745c5c3_Buffer, 7, "<div class=\"w-full border-t-1 border-t-black border-l-1 border-l-black border-r-1 border-r-grey border-b-1 border-b-grey\"><div><img src=\"../assets/images/under-construction.gif\" class=\"w-full object-contain object-center\"></div><div x-data=\"\" @click=\"toggle\" class=\"marquee\">")
						if templ_7745c5c3_Err != nil {
							return templ_7745c5c3_Err
						}
						for range 2 {
							templ_7745c5c3_Err = templruntime.WriteString(templ_7745c5c3_Buffer, 8, "<div>")
							if templ_7745c5c3_Err != nil {
								return templ_7745c5c3_Err
							}
							for range 3 {
								templ_7745c5c3_Err = templruntime.WriteString(templ_7745c5c3_Buffer, 9, "<img src=\"../assets/images/doot.gif\" class=\"max-w-none h-full object-scale-down object-center\">")
								if templ_7745c5c3_Err != nil {
									return templ_7745c5c3_Err
								}
							}
							templ_7745c5c3_Err = templruntime.WriteString(templ_7745c5c3_Buffer, 10, "</div>")
							if templ_7745c5c3_Err != nil {
								return templ_7745c5c3_Err
							}
						}
						templ_7745c5c3_Err = templruntime.WriteString(templ_7745c5c3_Buffer, 11, "</div><div><img src=\"../assets/images/bar.gif\" class=\"w-full object-contain object-center\"></div><div class=\"p-5\"><div class=\"flex flex-row\"><table class=\"w-full text-2x1\"><tr><th class=\"bg-stars\"><h2 class=\"font-comic-sans text-red-600\">Packages</h2></th></tr>")
						if templ_7745c5c3_Err != nil {
							return templ_7745c5c3_Err
						}
						for _, pkg := range packages {
							templ_7745c5c3_Err = templruntime.WriteString(templ_7745c5c3_Buffer, 12, "<tr><td class=\"bg-clouds font-comic-sans font-bold text-green-700 text-center\"><a href=\"")
							if templ_7745c5c3_Err != nil {
								return templ_7745c5c3_Err
							}
							var templ_7745c5c3_Var9 templ.SafeURL = templ.SafeURL("https://pkg.go.dev/" + pkg)
							_, templ_7745c5c3_Err = templ_7745c5c3_Buffer.WriteString(templ.EscapeString(string(templ_7745c5c3_Var9)))
							if templ_7745c5c3_Err != nil {
								return templ_7745c5c3_Err
							}
							templ_7745c5c3_Err = templruntime.WriteString(templ_7745c5c3_Buffer, 13, "\">")
							if templ_7745c5c3_Err != nil {
								return templ_7745c5c3_Err
							}
							var templ_7745c5c3_Var10 string
							templ_7745c5c3_Var10, templ_7745c5c3_Err = templ.JoinStringErrs(pkg)
							if templ_7745c5c3_Err != nil {
								return templ.Error{Err: templ_7745c5c3_Err, FileName: `pages/index.templ`, Line: 92, Col: 149}
							}
							_, templ_7745c5c3_Err = templ_7745c5c3_Buffer.WriteString(templ.EscapeString(templ_7745c5c3_Var10))
							if templ_7745c5c3_Err != nil {
								return templ_7745c5c3_Err
							}
							templ_7745c5c3_Err = templruntime.WriteString(templ_7745c5c3_Buffer, 14, "</a></td></tr>")
							if templ_7745c5c3_Err != nil {
								return templ_7745c5c3_Err
							}
						}
						templ_7745c5c3_Err = templruntime.WriteString(templ_7745c5c3_Buffer, 15, "</table></div></div></div>")
						if templ_7745c5c3_Err != nil {
							return templ_7745c5c3_Err
						}
						return nil
					})
					templ_7745c5c3_Err = components.Content(components.Class("overflow-auto", "h-3/4", "h-[60vh]", "overscroll-none", "bg-blue-maze")).Render(templ.WithChildren(ctx, templ_7745c5c3_Var8), templ_7745c5c3_Buffer)
					if templ_7745c5c3_Err != nil {
						return templ_7745c5c3_Err
					}
					return nil
				})
				templ_7745c5c3_Err = components.Card(components.Class("bg-silver", "border-1", "border-grey", "w-full", "max-h-screen")).Render(templ.WithChildren(ctx, templ_7745c5c3_Var5), templ_7745c5c3_Buffer)
				if templ_7745c5c3_Err != nil {
					return templ_7745c5c3_Err
				}
				templ_7745c5c3_Err = templruntime.WriteString(templ_7745c5c3_Buffer, 16, "</div></div><div class=\"\"><img src=\"../assets/images/skull.gif\" class=\"h-full object-cover\" alt=\"\"></div></div><audio src=\"assets/topgun.mp3\" id=\"player\"></audio>")
				if templ_7745c5c3_Err != nil {
					return templ_7745c5c3_Err
				}
				return nil
			})
			templ_7745c5c3_Err = components.Body().Render(templ.WithChildren(ctx, templ_7745c5c3_Var4), templ_7745c5c3_Buffer)
			if templ_7745c5c3_Err != nil {
				return templ_7745c5c3_Err
			}
			return nil
		})
		templ_7745c5c3_Err = components.Page().Render(templ.WithChildren(ctx, templ_7745c5c3_Var2), templ_7745c5c3_Buffer)
		if templ_7745c5c3_Err != nil {
			return templ_7745c5c3_Err
		}
		return nil
	})
}

func style() templ.Component {
	return templruntime.GeneratedTemplate(func(templ_7745c5c3_Input templruntime.GeneratedComponentInput) (templ_7745c5c3_Err error) {
		templ_7745c5c3_W, ctx := templ_7745c5c3_Input.Writer, templ_7745c5c3_Input.Context
		if templ_7745c5c3_CtxErr := ctx.Err(); templ_7745c5c3_CtxErr != nil {
			return templ_7745c5c3_CtxErr
		}
		templ_7745c5c3_Buffer, templ_7745c5c3_IsBuffer := templruntime.GetBuffer(templ_7745c5c3_W)
		if !templ_7745c5c3_IsBuffer {
			defer func() {
				templ_7745c5c3_BufErr := templruntime.ReleaseBuffer(templ_7745c5c3_Buffer)
				if templ_7745c5c3_Err == nil {
					templ_7745c5c3_Err = templ_7745c5c3_BufErr
				}
			}()
		}
		ctx = templ.InitializeContext(ctx)
		templ_7745c5c3_Var11 := templ.GetChildren(ctx)
		if templ_7745c5c3_Var11 == nil {
			templ_7745c5c3_Var11 = templ.NopComponent
		}
		ctx = templ.ClearChildren(ctx)
		templ_7745c5c3_Err = templruntime.WriteString(templ_7745c5c3_Buffer, 17, "<link rel=\"preconnect\" href=\"https://fonts.googleapis.com\"><link rel=\"preconnect\" href=\"https://fonts.gstatic.com\" crossorigin><link href=\"https://fonts.googleapis.com/css2?family=Comic+Neue:wght@400;700&amp;display=swap\" rel=\"stylesheet\"><link href=\"https://fonts.googleapis.com/css2?family=Silkscreen:wght@400;700&amp;display=swap\" rel=\"stylesheet\"><script defer src=\"https://cdn.jsdelivr.net/npm/alpinejs@3.x.x/dist/cdn.min.js\"></script><script src=\"https://cdn.jsdelivr.net/npm/@tailwindcss/browser@4\"></script><script type=\"text/javascript\">\n\t\tfunction toggle(e) {\n\t\t\tplayer = document.getElementById(\"player\");\n\t\t\tplayer.paused ? player.play() : player.pause();\n\t\t}\n\t</script><style type=\"text/tailwindcss\">\n\t\t* {\n\t\t\t/* https://www.cursors-4u.com/cursor/2006/06/09/spe115.html */\n\t\t\tcursor: url(../assets/spe115.cur), auto !important;\n\t\t}\n\t\thtml {\n\t\t\tbackground-color: #fff;\n\t\t\tfont-family: Silkscreen;\n\t\t\tbackground-image: url(\"../assets/images/bg-space.gif\");\n\t\t\tbackground-repeat: repeat;\n\t\t}\n\t\timg {\n\t\t\timage-rendering: pixelated;\n\t\t}\n\t\ttable {\n\t\t\tborder: 2px outset #000;\n\t\t\tborder-spacing: 2px;\n\t\t\tborder-collapse: separate;\n\t\t}\n\t\ttable td, th {\n\t\t\tpadding: 1px;\n\t\t\tborder-spacing: 2px;\n\t\t\tborder: 1px inset #000;\n\t\t}\n\t\tmarquee {\n\t\t\tfont-size: 4rem;\n\t\t\tcolor: white;\n\t\t\tfont-family: 'Comic Neue', cursive, sans-serif;\n\t\t}\n\t\t.bg-space {\n\t\t\tbackground-image: url(\"../assets/images/bg-space.gif\");\n\t\t\tbackground-repeat: repeat;\n\t\t}\n\t\t.bg-clouds {\n\t\t\tbackground-image: url(\"../assets/images/clouds.jpg\");\n\t\t\tbackground-repeat: repeat;\n\t\t}\n\t\t.bg-stars {\n\t\t\tbackground-image: url(\"../assets/images/bg-starry.jpg\");\n\t\t\tbackground-repeat: repeat;\n\t\t}\n\t\t.bg-blue-maze {\n\t\t\tbackground-image: url(\"../assets/images/bg-blue-maze.gif\");\n\t\t\tbackground-repeat: repeat;\n\t\t}\n\t\t.netscape-button {\n\t\t\tbackground-color: var(--color-grey);\n\t\t\tborder: 1px outset #fff;\n\t\t\tcolor: #000;\n\t\t\tfont-size: 7px;\n\t\t\tpadding: 1px 2px;\n\t\t\tcursor: pointer;\n\t\t\tbox-shadow: 1px 1px 0px #000, 1px 1px 0px #000, 1px 1px 0px #000;\n\t\t\ttransition: all 0.05s ease-in-out;\n\t\t\tmargin: 3px 2px;\n\t\t\twhite-space: nowrap;\n\t\t\tuser-select: none;\n\t\t}\n\t\t.netscape-button:active {\n\t\t\ttransform: translate(0.5px, 0.5px);\n\t\t\tbox-shadow: 1px 1px 0px #000, 1px 1px 0px #000, 1px 1px 0px #000, 1px 1px 0 #777;\n\t\t}\n\n\t\t.marquee {\n\t\t\t--gap: 1rem;\n\t\t\tposition: relative;\n\t\t\tdisplay: flex;\n\t\t\toverflow: hidden;\n\t\t\tuser-select: none;\n\t\t\tgap: var(--gap);\n\t\t}\n\n\t\t.marquee > * {\n\t\t\tflex-shrink: 0;\n\t\t\tdisplay: flex;\n\t\t\tjustify-content: space-around;\n\t\t\tgap: var(--gap);\n\t\t\tmin-width: 100%;\n\t\t\tanimation: marquee 3s linear infinite;\n\t\t}\n\n\t\t@keyframes marquee {\n\t\t\tfrom {\n\t\t\t\ttransform: translateX(0);\n\t\t\t}\n\t\t\tto {\n\t\t\t\ttransform: translateX(calc(-100% - var(--gap)));\n\t\t\t}\n\t\t}\n\n\t\t@tailwind base;\n\t\t@tailwind components;\n\t\t@tailwind theme;\n\t\t@tailwind utilities;\n\n\t\t@theme {\n\t\t\t--color-green: #155362;\n\t\t\t--color-grey: #c0c0c0;\n\t\t\t--color-silver: #777;\n\t\t\t--color-windows-blue: #000080;\n\t\t\t--font-comic-sans: 'Comic Neue', cursive, sans-serif; \n\t\t\t--font-silkscreen: \"Silkscreen\", sans-serif;\n\t\t}\n\n\t\t@layer components {\n\t\t\t.netscape-toolbar {\n\t\t\t\t@apply bg-grey\n\t\t\t\t\t\t\t border-t-1\n\t\t\t\t\t\t\t border-t-white\n\t\t\t\t\t\t\t border-l-1\n\t\t\t\t\t\t\t border-l-silver\n\t\t\t\t\t\t\t border-r-1\n\t\t\t\t\t\t\t border-r-silver\n\t\t\t\t\t\t\t border-b-1\n\t\t\t\t\t\t\t border-b-silver\n\t\t\t\t\t\t\t text-black;\n\t\t\t}\n\t\t}\n\t</style>")
		if templ_7745c5c3_Err != nil {
			return templ_7745c5c3_Err
		}
		return nil
	})
}

// Adapted from https://codepen.io/filipz/pen/jEENJww
func warpspeed() templ.Component {
	return templruntime.GeneratedTemplate(func(templ_7745c5c3_Input templruntime.GeneratedComponentInput) (templ_7745c5c3_Err error) {
		templ_7745c5c3_W, ctx := templ_7745c5c3_Input.Writer, templ_7745c5c3_Input.Context
		if templ_7745c5c3_CtxErr := ctx.Err(); templ_7745c5c3_CtxErr != nil {
			return templ_7745c5c3_CtxErr
		}
		templ_7745c5c3_Buffer, templ_7745c5c3_IsBuffer := templruntime.GetBuffer(templ_7745c5c3_W)
		if !templ_7745c5c3_IsBuffer {
			defer func() {
				templ_7745c5c3_BufErr := templruntime.ReleaseBuffer(templ_7745c5c3_Buffer)
				if templ_7745c5c3_Err == nil {
					templ_7745c5c3_Err = templ_7745c5c3_BufErr
				}
			}()
		}
		ctx = templ.InitializeContext(ctx)
		templ_7745c5c3_Var12 := templ.GetChildren(ctx)
		if templ_7745c5c3_Var12 == nil {
			templ_7745c5c3_Var12 = templ.NopComponent
		}
		ctx = templ.ClearChildren(ctx)
		templ_7745c5c3_Err = templruntime.WriteString(templ_7745c5c3_Buffer, 18, "<style>\n\t\t.sticky-container {\n\t\t\tposition: absolute;\n\t\t\theight: 100%;\n\t\t\twidth: 100%;\n\t\t\tmargin: 0;\n\t\t\tpointer-events: none;\n\t\t\t/* z-index: -1; */\n\t\t}\n\t\t.webgl-section {\n\t\t\tposition: sticky;\n\t\t\ttop: 0;\n\t\t\tleft: 0;\n\t\t\twidth: 100%;\n\t\t\theight: 100vh;\n\t\t\tdisplay: flex;\n\t\t\tjustify-content: center;\n\t\t\talign-items: center;\n\t\t\tz-index: 10;\n\t\t\toverflow: hidden;\n\t\t\twill-change: transform, opacity, filter;\n\t\t}\n\t\t.canvas-container {\n\t\t\twidth: 100%;\n\t\t\theight: 100%;\n\t\t\tposition: relative;\n\t\t\twill-change: transform, opacity, filter;\n\t\t\tdisplay: flex;\n\t\t\tjustify-content: center;\n\t\t\talign-items: center;\n\t\t}\n\t\tcanvas#space {\n\t\t\tposition: absolute;\n\t\t\ttop: 0;\n\t\t\tleft: 0;\n\t\t\twidth: 100%;\n\t\t\theight: 100%;\n\t\t\tdisplay: block;\n\t\t}\n\t</style><script type=\"text/javascript\">\n\t\t// Setup canvas and context\n\t\tconst canvas = document.getElementById(\"space\");\n\t\tconst ctx = canvas.getContext(\"2d\");\n\t\tcanvas.width = canvas.offsetWidth;\n\t\tcanvas.height = canvas.offsetHeight;\n\t\t// Starfield settings\n\t\tconst numStars = 5000;\n\t\tconst focalLength = canvas.width * 2;\n\t\tlet centerX = canvas.width / 2;\n\t\tlet centerY = canvas.height / 2;\n\t\tconst baseTrailLength = 2;\n\t\tconst maxTrailLength = 25;\n\t\t// Stars array\n\t\tlet stars = [];\n\t\t// Animation control\n\t\tlet warpSpeed = 0;\n\t\tlet animationActive = false;\n\t\t// Initialize stars\n\t\tfunction initializeStars() {\n\t\t\tstars = [];\n\t\t\tfor (let i = 0; i < numStars; i++) {\n\t\t\t\tstars.push({\n\t\t\t\t\tx: Math.random() * canvas.width,\n\t\t\t\t\ty: Math.random() * canvas.height,\n\t\t\t\t\tz: Math.random() * canvas.width,\n\t\t\t\t\to: 0.5 + Math.random() * 0.5,\n\t\t\t\t\ttrail: []\n\t\t\t\t});\n\t\t\t}\n\t\t}\n\t\t// Update star positions\n\t\tfunction moveStars() {\n\t\t\tfor (let i = 0; i < stars.length; i++) {\n\t\t\t\tconst star = stars[i];\n\t\t\t\t// Move star based on warp speed - always forward\n\t\t\t\tconst speed = 1 + warpSpeed * 50;\n\t\t\t\tstar.z -= speed;\n\t\t\t\t// Reset star position when it passes the viewer\n\t\t\t\tif (star.z < 1) {\n\t\t\t\t\tstar.z = canvas.width;\n\t\t\t\t\tstar.x = Math.random() * canvas.width;\n\t\t\t\t\tstar.y = Math.random() * canvas.height;\n\t\t\t\t\tstar.trail = [];\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\t// Draw stars and their trails\n\t\tfunction drawStars() {\n\t\t\t// Resize canvas if needed\n\t\t\tif (\n\t\t\t\tcanvas.width !== canvas.offsetWidth ||\n\t\t\t\tcanvas.height !== canvas.offsetHeight\n\t\t\t) {\n\t\t\t\tcanvas.width = canvas.offsetWidth;\n\t\t\t\tcanvas.height = canvas.offsetHeight;\n\t\t\t\tcenterX = canvas.width / 2;\n\t\t\t\tcenterY = canvas.height / 2;\n\t\t\t}\n\t\t\t// Calculate trail length based on warp speed\n\t\t\tconst trailLength = Math.floor(\n\t\t\t\tbaseTrailLength + warpSpeed * (maxTrailLength - baseTrailLength)\n\t\t\t);\n\t\t\t// Clear canvas with fade effect based on warp speed\n\t\t\tclearStars()\n\t\t\t// Draw stars and trails\n\t\t\tfor (let i = 0; i < stars.length; i++) {\n\t\t\t\tconst star = stars[i];\n\t\t\t\t// Calculate screen position with perspective\n\t\t\t\tconst px = (star.x - centerX) * (focalLength / star.z) + centerX;\n\t\t\t\tconst py = (star.y - centerY) * (focalLength / star.z) + centerY;\n\t\t\t\t// Add position to trail\n\t\t\t\tstar.trail.push({\n\t\t\t\t\tx: px,\n\t\t\t\t\ty: py\n\t\t\t\t});\n\t\t\t\tif (star.trail.length > trailLength) {\n\t\t\t\t\tstar.trail.shift();\n\t\t\t\t}\n\t\t\t\t// Draw trail\n\t\t\t\tif (star.trail.length > 1) {\n\t\t\t\t\tctx.beginPath();\n\t\t\t\t\tctx.moveTo(star.trail[0].x, star.trail[0].y);\n\t\t\t\t\tfor (let j = 1; j < star.trail.length; j++) {\n\t\t\t\t\t\tctx.lineTo(star.trail[j].x, star.trail[j].y);\n\t\t\t\t\t}\n\t\t\t\t\tctx.strokeStyle = `rgba(209,255,255,${star.o})`;\n\t\t\t\t\tctx.lineWidth = 1;\n\t\t\t\t\tctx.stroke();\n\t\t\t\t}\n\t\t\t\t// Draw star\n\t\t\t\tctx.fillStyle = `rgba(209,255,255,${star.o})`;\n\t\t\t\tctx.fillRect(px, py, 1, 1);\n\t\t\t}\n\t\t}\n\n\t\tfunction clearStars() {\n\t\t\tconst clearAlpha = 1 - warpSpeed * 0.8;\n\t\t\tctx.fillStyle = `rgba(17,17,17,${clearAlpha})`;\n\t\t\tctx.clearRect(0, 0, canvas.width, canvas.height);\n\t\t}\n\n\t\t// Animation loop\n\t\tfunction animate() {\n\t\t\tif (animationActive) {\n\t\t\t\trequestAnimationFrame(animate);\n\t\t\t\tmoveStars();\n\t\t\t\tdrawStars();\n\t\t\t}\n\t\t}\n\n\t\tfunction toggleWarpSpeed() {\n\t\t\tif (animationActive == false) {\n\t\t\t\tconsole.log(\"hit it!\")\n\t\t\t\tanimationActive = true;\n\t\t\t\tinitializeStars();\n\t\t\t\twarpSpeed = 0.25;\n\t\t\t\tanimate();\n\t\t\t\tid = setInterval(function() {\n\t\t\t\t\tif (warpSpeed == 0) {\n\t\t\t\t\t\twarpSpeed = 0.25;\n\t\t\t\t\t} else if (warpSpeed <= 0.99) {\n\t\t\t\t\t\twarpSpeed = 1 - Math.exp(-2 * warpSpeed);\n\t\t\t\t\t} else {\n\t\t\t\t\t\tclearInterval(id)\n\t\t\t\t\t}\n\t\t\t\t\tconsole.log(\"warpSpeed:\", warpSpeed)\n\t\t\t\t}, 100)\n\t\t\t} else {\n\t\t\t\tanimationActive = false;\n\t\t\t\tclearStars();\n\t\t\t}\n\t\t}\n\n\t\t// Handle window resize\n\t\twindow.addEventListener(\"resize\", () => {\n\t\t\tcanvas.width = canvas.offsetWidth;\n\t\t\tcanvas.height = canvas.offsetHeight;\n\t\t\tcenterX = canvas.width / 2;\n\t\t\tcenterY = canvas.height / 2;\n\t\t});\n\t</script>")
		if templ_7745c5c3_Err != nil {
			return templ_7745c5c3_Err
		}
		return nil
	})
}

var _ = templruntime.GeneratedTemplate
